There are several directives provided by NASM that define constants. We have already used the EQU directive in 
previous chapters. We will particularly discuss three directives:
	* EQU
	* %assign
	* %define

# The EQU Directive
The EQU directive is used for defining constants. The syntax of the EQU directive is as follows:
	CONSTANT_NAME EQU expression
For example:
	TOTAL_STUDENTS equ 50
You can use this constant value in your code, like:
	mov ecx, TOTAL_STUDENTS
	cmp eax, TOTAL_STUDENTS
The operand of an EQU statement can be an expression:
	LENGTH equ 20
	WIDTH equ 10
	AREA equ LENGTH * WIDTH
Above code segment would define AREA as 200.

# The %assign Directive
The %assign directive can be used to define numeric co0nstants like the EQU directive. This directive allows
redefinition. For example, you define the constant TOTAL as:
	%assign TOTAL 10
Later in the code, you can redefine it as:
	%assign TOTAL 20
This directive is case-sensitive.

# The %define Directive
The %define directive allows defining both numeric and string constants. This directive is similar to the #define in C.
For example, you may define the constant PTR as:
	%define PTR [EBP+4]
The above code replaces PTR by [ebp+4]
This directive also allows redefinition and it is case-sensitive.

