# The INC Instruction
The INC instruction is used for incrementing an operand by one. It works on a single operand that can be either in a
register or in memory.

Syntax
The INC instruction has the following syntax:
	INC destination
The operand destination could be an 9-bit, 16-bit or 32_bit operand.

Example:
	INC EBX ; Increment 32-bit register
	INC DL ; Increment 8-bit register
	INC [count] ; Increments the count variable

# The DEC Instruction
The DEC instruction is used for decrementing an operand by one. It works on a single operand that can be either in a
register or in memory.

Syntax
The DEC instruction has the following syntax:
	DEC destination
The operand destination could be an 9-bit, 16-bit or 32-bit operand.

Example:
	segment .data
		count dw 0
		value db 15
	
	segment .text
		inc [count]
		dec [value]
	
		mov ebx, count
		inc word [ebx]
		
		mov esi, value
		dec bute [esi]

# The ADD and SUB Instructions
The ADD and SUB instructions are usedfor performing simple addition/substraction of binary data in bute, word and 
doubleword size, i.e., for adding or substraction 8-bit, 16-bit or 32-bit operands, respectively.

Sytax
The ADD and SUB instruction have the following syntax:
	ADD/SUB destination, source
The ADD/SUB instruction can take place between:
	* Register to register
	* Memory to register
	* Register to memory
	* Register to constant data
	* Memory to constant data
However, like other instruction, memory-to-memory operation are not possible using ADD/SUB instructions. An ADD
or SUB operation sets or clears the overflow and carry flags.

Example 
The following example will ask two digits from the user, store the digits in the EAX and EBX register, respectively, add
the value, store the result in a memory location 'res' and finally display the result.

